import { radiusButtons, seasonButtons, startButtons } from '../../helpers/buttons';
import { generateWidthTires } from '../../helpers/width-button.generator';

interface Button {
  text: string;
  buttons: {
    text: string;
  }[][];
}

interface ButtonMap {
  [key: string]: Button;
}

export const handleBackHomeButtons = <T extends string>(message: T, radius?: number) => {
  const set: ButtonMap = {
    'üîô –ù–∞–∑–∞–¥': {
      text: '–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –Ω–∞–∑–∞–¥',
      buttons: startButtons,
    },
    '‚¨ÖÔ∏è –ù–∞–∑–∞–¥': {
      text: '–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –Ω–∞–∑–∞–¥',
      buttons: seasonButtons,
    },
    '‚Ü©Ô∏è –ù–∞–∑–∞–¥': {
      text: '–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –Ω–∞–∑–∞–¥',
      buttons: radiusButtons,
    },
    'üëàüèª –ù–∞–∑–∞–¥': {
      text: '–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –Ω–∞–∑–∞–¥',
      buttons: generateWidthTires(radius as number),
    },
    'üè† Home': {
      text: '–í–∏ –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π',
      buttons: startButtons,
    },
  };

  const isHasValue = set[message];

  if (!isHasValue) return null;

  return isHasValue;
};
