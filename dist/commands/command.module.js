"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.commandModule = void 0;
const brandi_1 = require("brandi");
const tokens_1 = require("../containter/tokens");
const add_command_1 = require("./add/add.command");
const ban_command_1 = require("./ban/ban.command");
const del_command_1 = require("./del/del.command");
const get_command_1 = require("./get/get.command");
const image_command_1 = require("./image/image.command");
const start_command_1 = require("./start/start.command");
const unban_command_1 = require("./unban/unban.command");
const upd_command_1 = require("./upd/upd.command");
const command_factory_1 = require("./command.factory");
exports.commandModule = new brandi_1.DependencyModule();
exports.commandModule.bind(tokens_1.TOKENS.addProductCommand).toInstance(add_command_1.AddProduct).inSingletonScope();
exports.commandModule.bind(tokens_1.TOKENS.banCommand).toInstance(ban_command_1.BanUsers).inSingletonScope();
exports.commandModule.bind(tokens_1.TOKENS.DeleteProductCommand).toInstance(del_command_1.DeleteProduct).inSingletonScope();
exports.commandModule.bind(tokens_1.TOKENS.getProductCommand).toInstance(get_command_1.GetProduct).inSingletonScope();
exports.commandModule.bind(tokens_1.TOKENS.imageCommand).toInstance(image_command_1.ImageCommand).inSingletonScope();
exports.commandModule.bind(tokens_1.TOKENS.startCommand).toInstance(start_command_1.StartCommand).inSingletonScope();
exports.commandModule.bind(tokens_1.TOKENS.unbanCommand).toInstance(unban_command_1.UnbanUsers).inSingletonScope();
exports.commandModule.bind(tokens_1.TOKENS.UpdateProductCommand).toInstance(upd_command_1.UpdateProduct).inSingletonScope();
exports.commandModule.bind(tokens_1.TOKENS.commandFactory).toInstance(command_factory_1.CommandFactory).inSingletonScope();
(0, brandi_1.injected)(add_command_1.AddProduct, tokens_1.TOKENS.bot, tokens_1.TOKENS.loggerService, tokens_1.TOKENS.adminService);
(0, brandi_1.injected)(ban_command_1.BanUsers, tokens_1.TOKENS.bot, tokens_1.TOKENS.loggerService, tokens_1.TOKENS.adminService);
(0, brandi_1.injected)(del_command_1.DeleteProduct, tokens_1.TOKENS.bot, tokens_1.TOKENS.loggerService, tokens_1.TOKENS.adminService);
(0, brandi_1.injected)(get_command_1.GetProduct, tokens_1.TOKENS.bot, tokens_1.TOKENS.loggerService, tokens_1.TOKENS.adminService);
(0, brandi_1.injected)(image_command_1.ImageCommand, tokens_1.TOKENS.bot, tokens_1.TOKENS.adminService, tokens_1.TOKENS.loggerService);
(0, brandi_1.injected)(start_command_1.StartCommand, tokens_1.TOKENS.bot, tokens_1.TOKENS.loggerService, tokens_1.TOKENS.productService, tokens_1.TOKENS.blackListService);
(0, brandi_1.injected)(unban_command_1.UnbanUsers, tokens_1.TOKENS.bot, tokens_1.TOKENS.loggerService, tokens_1.TOKENS.adminService);
(0, brandi_1.injected)(upd_command_1.UpdateProduct, tokens_1.TOKENS.bot, tokens_1.TOKENS.loggerService, tokens_1.TOKENS.adminService);
(0, brandi_1.injected)(command_factory_1.CommandFactory, tokens_1.TOKENS.startCommand, tokens_1.TOKENS.addProductCommand, tokens_1.TOKENS.imageCommand, tokens_1.TOKENS.DeleteProductCommand, tokens_1.TOKENS.unbanCommand, tokens_1.TOKENS.getProductCommand, tokens_1.TOKENS.banCommand, tokens_1.TOKENS.unbanCommand);
